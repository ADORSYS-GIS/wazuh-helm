# templates/tekton/tasks/rsync-pvc-to-pvc.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: rsync-pvc-to-pvc
  namespace: wazuh
  labels:
    app.kubernetes.io/name: rsync-pvc-to-pvc
  annotations:
    tekton.dev/displayName: "Rsync PVC to PVC"
spec:
  description: |
    Uses rsync to copy from a source PVC workspace into a destination PVC workspace.
  params:
    - name: sourcePath
      type: string
      description: "Relative path under /workspace/source to copy from (e.g. 'data/')."
      default: "./"
    - name: destinationPath
      type: string
      description: "Relative path under /workspace/destination to copy to (e.g. 'manager-backup/')."
      default: "./backup/"
  steps:
    - name: rsync
      image: "{{ .Values.tekton.tasks.rsync.image | default "eeacms/rsync:2.4.0" }}"
      script: |
        set -euxo pipefail

        SRC_DIR="${SOURCE_PATH}"
        DEST_DIR="${DESTINATION_PATH}"

        # 1  Source must exist.
        if [[ ! -d "$SRC_DIR" ]]; then
        echo "‚ùå Source directory $SRC_DIR does not exist."
        exit 1
        fi

        # 2  Refuse to treat / (root) as either source or destination.
        if [[ "$SRC_DIR" == "/" || "$DEST_DIR" == "/" ]]; then
        echo "‚ùå Refusing to use / as source or destination."
        exit 1
        fi

        # 3  Create destination if it is missing.
        if [[ ! -d "$DEST_DIR" ]]; then
        echo "üìÇ Destination $DEST_DIR not found. Creating it‚Ä¶"
        mkdir -p "$DEST_DIR"
        fi

        echo "üì¶ Rsyncing from $SRC_DIR/ ‚Üí $DEST_DIR/"
        # -a : archive (recursive, preserve permissions/owners/timestamps, etc.)
        # -v : verbose (helps with Tekton log visibility)
        # -h : human-readable numbers
        # --delete : remove files in DEST that were deleted from SRC
        rsync -avh --delete "$SRC_DIR/" "$DEST_DIR/"
        echo "‚úÖ Rsync complete."

      env:
        - name: SOURCE_PATH
          value: "/wazuh-manager-data"
        - name: DESTINATION_PATH
          value: "/backup"
      volumeMounts:
        - name: source-volume
          mountPath: /wazuh-manager-data
        - name: destination-volume
          mountPath: /backup
  volumes:
    - name: source-volume
      persistentVolumeClaim:
        claimName: wazuh-wazuh-helm-manager-master-wazuh-wazuh-helm-manager-master-0
    - name: destination-volume
      persistentVolumeClaim:
        claimName: backup-staging-pvc

