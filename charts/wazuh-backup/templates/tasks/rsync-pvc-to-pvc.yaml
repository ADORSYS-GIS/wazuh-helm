# templates/tasks/rsync-pvc-to-pvc.yaml

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: rsync-pvc-to-pvc
  namespace: {{ include "common.names.namespace" $ }}
  labels:
    app.kubernetes.io/name: rsync-pvc-to-pvc
  annotations:
    tekton.dev/displayName: "Rsync PVC to PVC"
spec:
  description: |
    Uses rsync to copy from a source PVC to a destination PVC workspace.
    This task is parameterized to work with any source PVC.
  params:
    - name: sourcePvcName
      type: string
      description: "Name of the source PVC to copy from"
    - name: sourcePath
      type: string
      description: "Relative path under the source PVC to copy from (e.g. 'data/')."
      default: ""
    - name: destinationPath
      type: string
      description: "Relative path under /backup to copy to (e.g. 'manager-backup/')."
      default: ""
  steps:
    - name: rsync
      image: "{{ include "image.ref" .Values.tekton.tasks.rsync.image }}"
      imagePullPolicy: {{ .Values.tekton.tasks.rsync.image.pullPolicy | default "IfNotPresent" }}
      script: |
        # Copy script to writable location and execute
        cp /scripts/rsync-pvc-to-pvc.sh /tmp/rsync-pvc-to-pvc.sh
        chmod +x /tmp/rsync-pvc-to-pvc.sh
        sh /tmp/rsync-pvc-to-pvc.sh
      env:
        - name: SOURCE_PATH
          value: "$(params.sourcePath)"
        - name: DESTINATION_PATH
          value: "$(params.destinationPath)"
      volumeMounts:
        - name: source-volume
          mountPath: /source
        - name: destination-volume
          mountPath: /backup
        - name: scripts-volume
          mountPath: /scripts

  volumes:
    - name: source-volume
      persistentVolumeClaim:
        claimName: "$(params.sourcePvcName)"
    - name: destination-volume
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.staging.name }}
    - name: scripts-volume
      configMap:
        name: wazuh-backup-scripts
        defaultMode: 0755
