apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s3-cleanup-task
  namespace: wazuh
spec:
  workspaces:
    - name: backup-volume
  
  stepTemplate:
    env:
      - name: AWS_ACCESS_KEY_ID
        value: "{{ .Values.aws.accessKeyId }}"
      - name: AWS_SECRET_ACCESS_KEY
        value: "{{ .Values.aws.secretAccessKey }}"
      - name: AWS_SESSION_TOKEN
        value: "{{ .Values.aws.sessionToken }}"
    volumeMounts:
      - name: backup-volume
        mountPath: /backup
  results:
    - name: old-folders
      description: >-
        Spaceâ€‘separated list of backup folders older than 30 days in S3

  steps:
    - name: identify-old-folders
      image: custom-backup-image:latest
      imagePullPolicy: IfNotPresent
      script: |
        #!/bin/sh
        set -ex
        now_ts=$(date +%s)
        old_list=""
        # list prefixes (folders) in the bucket
        for folder in $(aws s3 ls s3://test-wazuh-backup-bucket/ \
                         | awk '/PRE/ {print $2}' | sed 's#/##'); do
          backup_date=$(echo $folder | cut -d'_' -f1)
          backup_ts=$(date -d "$backup_date" +%s)
          diff_days=$(( (now_ts - backup_ts) / 86400 ))
          if [ $diff_days -ge 30 ]; then
            echo "Marked for deletion: $folder ($diff_days days old)"
            old_list="$old_list $folder"
          fi
        done
        # write the list into the task result
        echo -n "$old_list" > $(results.old-folders.path)
    - name: delete-old-folders
      image: custom-backup-image:latest
      imagePullPolicy: IfNotPresent
      script: |
        #!/bin/sh
        set -ex
        # read and delete each old folder
        for folder in $(cat $(results.old-folders.path)); do
          echo "Deleting backup folder $folder..."
          aws s3 rm --recursive s3://test-wazuh-backup-bucket/$folder
        done
        echo "Cleanup completed."

