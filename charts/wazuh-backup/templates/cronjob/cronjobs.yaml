# templates/cronjob/cronjobs.yaml
# CronJobs that trigger backups by calling the EventListener (hybrid approach)

{{- if .Values.backup.mode.cronjobs }}
{{- range $componentName, $config := .Values.backup.components }}
{{- if $config.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: wazuh-backup-{{ $componentName }}-cron
  namespace: {{ $.Values.namespace }}
  labels:
    app.kubernetes.io/name: wazuh-backup-{{ $componentName }}-cron
    app.kubernetes.io/instance: {{ $.Release.Name }}
    component: {{ $componentName }}
spec:
  schedule: "{{ $config.schedule | default $.Values.backup.schedule }}"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: wazuh-backup-sa
          restartPolicy: OnFailure
          containers:
            - name: trigger-backup
              image: "curlimages/curl:8.1.0"
              command:
                - /bin/sh
                - -c
                - |
                  set -e
                  
                  echo "üïê Scheduled backup triggered for {{ $componentName }} at $(date)"
                  
                  # Call the EventListener service to trigger the backup
                  curl -X POST \
                    -H "Content-Type: application/json" \
                    -d '{
                      "component": "{{ $componentName }}",
                      "s3BucketName": "{{ $.Values.backup.s3.bucketName }}",
                      "s3EndpointUrl": "{{ $.Values.backup.s3.endpointUrl }}",
                      "triggeredBy": "cronjob"
                    }' \
                    "http://wazuh-backup-listener-svc.{{ $.Values.namespace }}.svc.cluster.local:8080/"
                  
                  if [ $? -eq 0 ]; then
                    echo "‚úÖ Backup request sent successfully for {{ $componentName }}"
                  else
                    echo "‚ùå Failed to send backup request for {{ $componentName }}"
                    exit 1
                  fi
{{- end }}
{{- end }}
{{- end }}