#!/bin/sh

set -e

# Function to replace variables
replace_variables() {
  local input="$1"
  local output="$2"

  echo "[wazuh.replace-var.sh] Processing configuration file $input..."

  # Create a temporary file to store the processed lines
  local tempfile=$(mktemp)

  # Read and process the input file line by line
  while IFS= read -r line || [ -n "$line" ]; do
	# Normalize variable forms
	line=$(echo "$line" | sed -e "s/\${\([A-Z_][A-Z0-9_]*\)}/\$\1/g")
	line=$(echo "$line" | sed -e "s/\$\([A-Z_][A-Z0-9_]*\)/\${\1}/g")

	# Replace variables with their values
	while echo "$line" | grep -q '${[A-Z_][A-Z0-9_]*}'; do
	  varname=$(echo "$line" | sed 's/^.*${\([A-Z_][A-Z0-9_]*\)}.*$/\1/')
	  eval varvalue="\$$varname"
	  if [ -z "$varvalue" ]; then
		echo "[wazuh.replace-var.sh] Error: Environment variable '$varname' not found."
		exit 1
	  fi
	  # Escape special characters in the variable value
	  escaped_varvalue=$(printf '%s\n' "$varvalue" | sed 's/[\/&]/\\&/g')
	  line=$(echo "$line" | sed "s/\${$varname}/$escaped_varvalue/g")
	done
	echo "$line" >> "$tempfile"
  done < "$input"

  # Add comments for future upgrades and concatenate with the processed file
  cat <<EOF | cat - "$tempfile" > "$output"
<!--
This configuration file was generated by processing template.ossec.conf
Environment variables in the form \$VAR or \${VAR} are replaced with their values
Ensure all necessary environment variables are set before running this script
To add new variables, follow the same pattern:
- Use \${VAR} in the template file
- Export the variable in the environment before running the script
-->

EOF

  # Clean up temporary file
  rm "$tempfile"

  echo "[wazuh.replace-var.sh] Configuration processing complete. Output written to $output."
}

# Call the function with input and output file arguments
replace_variables "$1" "$2"